<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Parking Details | Parkongo</title>

  <!-- Tailwind CSS -->
  <link href="../src/output.css" rel="stylesheet" />
  <style>
    #map {
      height: 300px;
      width: 100%;
      border-radius: 0.75rem;
    }
  </style>
</head>
<body class="min-h-screen bg-gradient-to-br from-slate-800 via-slate-700 to-slate-600 flex flex-col items-center justify-center px-4 py-10 text-white font-sans">

  <div class="max-w-3xl w-full bg-white text-gray-900 rounded-2xl shadow-2xl p-8">
    <h2 class="text-3xl font-bold mb-4 text-center text-indigo-700">üìç Parking Found!</h2>

    <div class="space-y-4">
      <p class="text-lg"><strong>Owner Name:</strong> <span id="ownerName">Loading...</span></p>
      <p class="text-lg"><strong>Email:</strong> <span id="ownerEmail">Loading...</span></p>
      <p class="text-lg"><strong>Parking Type:</strong> <span id="wheelerType">Loading...</span></p>
      <p class="text-lg"><strong>Address:</strong> <span id="parkingAddress">Loading...</span></p>
      <p class="text-lg"><strong>Price:</strong> ‚Çπ<span id="price">Loading...</span></p>
      <p class="text-lg"><strong>Distance from you:</strong> <span id="distance">Calculating...</span> km</p>
    </div>

    <div class="mt-6">
      <div id="map"></div>
    </div>
  </div>

  <!-- Leaflet JS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

  <script>
    const apiKey = "<%= apiKey %>"; // your LocationIQ key

  async function fetchParkingData() {
  try {
    const data = JSON.parse(localStorage.getItem("parkingData"));
    if (!data) throw new Error("No parking data found");

    document.getElementById("ownerName").textContent = data.name;
    document.getElementById("ownerEmail").textContent = data.email;
    document.getElementById("wheelerType").textContent = data.wheeler;
    document.getElementById("parkingAddress").textContent = data.address;
    document.getElementById("price").textContent = data.price;

    navigator.geolocation.getCurrentPosition(async (pos) => {
      const userLat = pos.coords.latitude;
      const userLon = pos.coords.longitude;

      const geoRes = await fetch(`https://us1.locationiq.com/v1/search.php?key=${apiKey}&q=${data.address}&format=json`);
      const geoData = await geoRes.json();
      const parkingLat = parseFloat(geoData[0].lat);
      const parkingLon = parseFloat(geoData[0].lon);

      const haversine = (lat1, lon1, lat2, lon2) => {
        const R = 6371;
        const dLat = (lat2 - lat1) * Math.PI / 180;
        const dLon = (lon2 - lon1) * Math.PI / 180;
        const a = Math.sin(dLat / 2) ** 2 +
                  Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
                  Math.sin(dLon / 2) ** 2;
        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        return (R * c).toFixed(2)/10;
      };

      const distance = haversine(userLat, userLon, parkingLat, parkingLon);
      document.getElementById("distance").textContent = distance;

      const map = L.map('map').setView([parkingLat, parkingLon], 14);
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
      }).addTo(map);

      L.marker([parkingLat, parkingLon]).addTo(map).bindPopup("üÖøÔ∏è Parking Location").openPopup();
      L.circle([userLat, userLon], { radius: 10, color: 'green' }).addTo(map).bindPopup("üìç You are here");

    }, () => {
      alert("Location permission denied.");
    });
  } catch (err) {
    alert("Error: " + err.message);
    console.error(err);
  }
}


    fetchParkingData();
  </script>

</body>
</html>
